buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0'
    }
}

repositories {
    google()
    jcenter()
}

apply plugin: 'com.android.library'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation 'androidx.core:core:1.2.0'
}

android {
    compileSdkVersion androidCompileSdkVersion.toInteger()

    buildToolsVersion androidBuildToolsVersion ? androidBuildToolsVersion.toString() : '28.0.3'

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = [qt5AndroidDir + '/src', 'src', 'java']
            aidl.srcDirs = [qt5AndroidDir + '/src', 'src', 'aidl']
            res.srcDirs = ['res']
            resources.srcDirs = ['resources']
            renderscript.srcDirs = ['src']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
    }

    lintOptions {
        abortOnError false
    }

    // Do not compress Qt binary resources file
    aaptOptions {
        noCompress 'rcc'
    }

    defaultConfig {
        resConfigs "en"
    }
}

task removeBadClasses {
    doLast {
        // Delete the classes not needed in the plugin aar
        fileTree("${buildDir}/intermediates/javac/release/classes").matching {
            include "org/kde/necessitas/ministro/*.class"
            include "org/qtproject/qt5/android/bindings/*.class"
        }.each {
            file(it).delete()
        }
    }
}

afterEvaluate {
    //transformClassesAndResourcesWithSyncLibJarsForRelease.dependsOn(removeBadClasses)
    //transformClassesAndResourcesWithSyncLibJarsForDebug.dependsOn(removeBadClasses)
    bundleReleaseAar.dependsOn(removeBadClasses)
    bundleDebugAar.dependsOn(removeBadClasses)
}
